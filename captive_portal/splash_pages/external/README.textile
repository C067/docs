h1. UAM Splash Pages with Authentication Server

_This is preliminary documentation. It applies only to networks running under CloudTrax 4._

UAM splash pages are used to allow customers to host their own splash pages. This replaces the splash pages which are directly provided by each Open-Mesh router. The authentication is still done using the normal authentication backends. See "Authentication Services":(../../authentication/README.md).

You'll need to use the CloudTrax Dashboard to configure the "Splash Page URL" of your splash page ("UAM_SERVER" + "/" + "UAM_URL" in the Example Values table below), as well as its "Splash Page Secret" ( "UAM_SECRET").

!images/External_splash-page_configuration.png!

UAM Splash pages are also used with Coova/Chillispot, and splash pages created for these systems should be compatible with the Open-Mesh UAM Splash page system.

h2. Communication overview

A pre-authenticated user is redirected to an external page (along with some extra parameters). This page shows a login form; submitting this form will result in a redirect to a specially formatted URL located on the AP. The information encoded in the URL includes the username and password. The AP uses this information to authenticate the user against the backend authentication server.

On success, the Login-Page server and the client are informed.

!images/2014-06-26_Login.png!

The AP will send accounting information to the backend authentication server at specific intervals and when the user gets de-authenticated.

!images/2014-06-25_Acct.png!

This approach also allows the external page to get extra information about the user, while still allowing the AP to concentrate on authentication and access control. The Login-Server must be part of the walled garden to work.

h2. Example values

For the following sections, assume the following example values:

|_.	Name	|_.	Value	|_.	Description	|
|	UAM_SERVER	|	http://example.com	|	Name of the server containing the splash page	|
|	UAM_URL	|	/splashpage/	|	Path to the splash page on the UAM server	|
|	UAMIP	|	10.2.3.1	|	(internal) IP address of the gateway responsible for the client	|
|	UAMPORT	|	8081	|	HTTP port of the gateway responsible for the client	|
|	MAC	|	00-11-22-33-44-55	|	mac address of the client	|
|	CALLED	|	00-FF-EE-DD-CC-BB	|	mac address of eth0 of the AP	|
|	SSID	|	FooGateway	|	name of the gateway were the client connected	|
|	NASID	|	nas01	|	Network access server ID for this gateway	|
|	USERURL	|	http://www.google.com	|	The URL the client tried to access and wants to be redirected to after they've connected	|
|	CHALLENGE	|	25f2268da3a9f7cb0bccefad03ad7935c97b98f4	|	Randomly generated value (encoded as a hexstring) used for password encryption	|
|	UAM_SECRET	|	verysecretstring	|	secret shared with the UAM page for password encryption	|
|	username	|	herbert	|	username given by the client to the splash page	|
|	password	|	thepasswordishidden	|	password given by the client to the splash page	|

A detailed explanation of the used URLs and password encryption can be found at the end of this document.

h2. Login redirect

The AP automatically redirects HTTP requests of a new client to the UAM splash page server. This redirect contains all information necessary for the UAM splash page to show a login form. This includes:

 * current client state ("notyet")
 * location where the splash page has to redirect the client after all work on the splash page is complete
 * mac address of the client
 * mac address of eth0 on the AP
 * name of the gateway
 * (optional) Network Access Server ID of the gateway
 * (optional) urlencoded URL the client wanted to access when they were redirected
 * Randomly generated value used for password encryption

Such a redirect URL can be, for example:

<pre>
https://example.com/splashpage/?res=notyet&uamip=10.2.3.1&uamport=8081&mac=00-11-22-33-44-55&called=00-FF-EE-DD-CC-BB&ssid=FooGateway&nasid=nas01&userurl=http%3A%2F%2Fwww.google.com&challenge=25f2268da3a9f7cb0bccefad03ad7935c97b98f4
</pre>

The UAM splash page has to store the challenge, uamip and uamport. It should also store the USERURL to be able to redirect the user after a successful authentication. The splash page sent to the client can be in an arbitrary form which allows the user to log in. All resources referenced by the splash page (HTML, CSS, images) have to be served from the domain specified in UAM_SERVER or any domain which was whitelisted using the walled garden.

The splash page has to redirect the user back to the AP after the login form was filled out correctly. The username and password has given to the AP in this step to allow the AP to check the login and authorize the network access. The password is encrypted using the challenge and the shared secret. A detailed explanation of the encryption step can be found at the end of the document.

The redirect by the splash page can be,for example:

<pre>
http://10.2.3.1:8081/logon?username=herbert&password=B9D05492B0AAA69C01938973B23AEDB1A9DD5FE267C6697351FF4AEC29CDBAAB
</pre>

The url can also contain a parameter <code>redir</code> with the content of <code>userurl</code> when the splash page doesn't want to save the <code>userurl</code> parameter of the original URL to a permanent storage for later use.

h2. Post-Login redirect

The AP tries to authenticate the client based on the credentials it got from the splash page. The backend authenticator is responsible for authentication of the client and the AP only authorizes the client after the backend has accepted him or her.

The AP redirects the client back to the splash page independently from the result of the authentication check. Only the <code>res</code> parameter of the URL differs in these situations. After a successful authentication request, the AP sends the value *success*; otherwise *failed*.

The URL contains

 * current client state ("failed" or "success")
 * location where the splash page has to redirect the client after all work was done on the splash page
 * mac address of the client
 * mac address of eth0 on the AP
 * name of the gateway
 * (optional) Network Access Server ID of the gateway
 * (optional) urlencoded URL the client wanted to access when he was redirected. Only present when the redirect back to the AP contained the <code>redir</code> parameter.
 * Randomly generated value used for password encryption

Such a redirect URL can be for example

<pre>
https://example.com/splashpage/?res=success&uamip=10.2.3.1&uamport=8081&mac=00-11-22-33-44-55&called=00-FF-EE-DD-CC-BB&ssid=FooGateway&nasid=nas01&challenge=25f2268da3a9f7cb0bccefad03ad7935c97b98f4
</pre>


The UAM splash page must decide what it does next based on the <code>res</code> parameter:

 * "success"
 ** The splash page should redirect the user to the URL given them via the parameter <code>userurl</code> (may be only provided the first time the splash page is accessed)
 ** The splash page should redirect the user to a default URL when no <code>userurl</code> was stored for this client
 * "failed"
 ** The splash page must allow the user to log in again. Clients may be blocked for a limited time by the splash page for excessive login retries
 ** The splash page should show the user a message that the last login failed

h2. Logout redirect

The AP redirects the client after a manual logout. The URL contains the following parameters:

 * current client state ("logoff")
 * location where the splash page has to redirect the client after all work on the splash page has been completed
 * mac address of the client
 * mac address of eth0 on the AP
 * name of the gateway
 * (optional) Network Access Server ID of the gateway
 * a randomly generated value used for password encryption

Such a redirect URL can be, for example:

<pre>
https://example.com/splashpage/?res=logoff&uamip=10.2.3.1&uamport=8081&mac=00-11-22-33-44-55&called=00-FF-EE-DD-CC-BB&ssid=FooGateway&nasid=nas01&challenge=25f2268da3a9f7cb0bccefad03ad7935c97b98f4
</pre>

The splash page may allow the user to log in again.

h2. Redirect URLs

The AP always redirects to the external splash page using URLs with the format:

<pre>
<UAM_SERVER><UAM_URL>?res=<RES>&uamip=<UAMIP>&uamport=<UAMPORT>&mac=<MAC>&called=<CALLED>&ssid=<SSID>&nasid=<NASID>&userurl=<USERURL>&challenge=<CHALLENGE>
</pre>

* Both <code>UAM_SERVER</code> and <code>UAM_URL</code> are from the config options with the same name. The appended "?" can also be a "&" when the <code>UAM_URL</code> URL already contains a "?".
* <code>RES</code> can be
** "notyet": not yet authenticated. A splash page should be shown
** "logoff": user has made a logout request
** "success": login was accepted by the AP. A splash page should inform the user about the success, and/or redirect it to another page
** "failed": login was not accepted by the AP
* <code>UAMIP</code>: address of the AP (for the "Redirect to AP with User+Password")
* <code>UAMPORT</code>: port of the AP/login checker (for the "Redirect to AP with User+Password")
* <code>MAC</code>: mac address of client
* <code>CALLED</code>: address of eth0 on the AP
* <code>SSID</code>: name of the gateway
* OPTIONAL: <code>NASID</code>: nasid (Network Access Server ID) of the current gateway
* OPTIONAL: <code>USERURL</code>: URL requested by user before they were redirected to the splash page
* <code>CHALLENGE</code>: a random string (encoded as hexadecimal digits) which must be used by the splash page when transferring the password to the AP in the "Redirect to AP with User+Password" step. For example, a 256-bit long challenge encoded in 64 characters (0-9, A-F/a-f)

Redirects by the splash page for the "Redirect to AP with User+Password" step must contain the following parameters in the URL:

* username: username used during the login
* password: encrypted password used during the login

<pre>
http://<UAMIP>:<UAMPORT>/logon?username=<USERNAME>&password=<ENCRYPTED_PASSWORD>
</pre>

h2. Password encryption

The password must be combined with the <code>uam_secret</code> and the challenge (in binary form, not hexadecimal) from the AP to create the encrypted form. The AP uses the following (pseudo)code to decode the password (the binary form, not the hexadecimal form from the URL)

<pre>
char *decode_password_challenge(const char *crypted, const char *challenge, const char *uam_secret)
{
	uint8_t *crypt_uam_secret;
	size_t i;
	char buf[...];

	if (uam_secret)
		crypt_uam_secret = md5(concat(challenge, uam_secret));
	else
		crypt_uam_secret = challenge;

	for (i = 0; i < len(crypted); i++)
		buf[i] = crypted[i] ^ crypt_uam_secret[i % len(crypt_uam_secret)];

	return buf;
}
</pre>

The operation is symmetric and can also be used to encrypt the plain password.

The unencrypted password can be filled up with additional bytes by adding a zero byte at the end of the unencrypted password and then adding arbitrary bytes.